package seunghee._Do_it_자바_완전_정복._10_클래스의_상속과_다형성._02_객체의_타입_변환;

// 클래스의 상속 관계
class _01_A {}
class _01_B extends _01_A {}
class _01_C extends _01_B {}
class _01_D extends _01_B {}

public class _01_Typecasting_1 {
    public static void main(String[] args) {
        // 업캐스팅(자동 변환) : 캐스팅 구문을 생략했을 때 컴파일러가 자동으로 추가
        _01_A ac = new _01_C();     // C -> A 업캐스팅(자동 변환)
        _01_B bc = new _01_C();     // C -> B 업캐스팅(자동 변환)

        _01_B bb = new _01_B();
        _01_A a = (_01_A) bb;       // B -> A 업캐스팅(자동 변환)

        // 다운캐스팅(수동 변환) : 캐스팅할 수 없을 때 (실행할 때 예외 발생)
        _01_A aa = new _01_A();
        // _01_B b = (_01_B) aa;    // A -> B 다운캐스팅(수동 변환) : 불가능
        // _01_C c = (_01_C) aa;    // A -> C 다운캐스팅(수동 변환) : 불가능

        // 다운캐스팅(수동 변환) : 캐스팅이 가능할 떄
        _01_A ab = new _01_B();
        _01_B b = (_01_B) ab;       // A -> B 다운캐스팅(수동 변환)
        // _01_C c = (_01_C) ab;    // A -> C 다운캐스팅(수동 변환) : 불가능

        _01_B bd = new _01_D();
        _01_D d = (_01_D) bd;       // B -> D 다운캐스팅(수동 변환)

        _01_A ad = new _01_D();
        _01_B b1 = (_01_B) ad;      // A -> B 다운캐스팅(수동 변환)
        _01_D d1 = (_01_D) ad;      // A -> D 다운캐스팅(수동 변환)


    }
}
